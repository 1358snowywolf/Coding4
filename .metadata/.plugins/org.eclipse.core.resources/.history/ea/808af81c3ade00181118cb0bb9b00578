#include <bits/stdc++.h>

using namespace std;
vector<bool> visited;
map<int, vector<pair<int, int>>> graph;

void process(int u, priority_queue<pair<int, int>>& pq){
	visited[u] = true;

	for(pair<int, int> n : graph[u]){
		if(!visited[u]){
			pq.push(make_pair(n.second * -1, n.first));
		}
	}
}

void Prim(){
	priority_queue<pair<int, int>> pq;
	process(0, pq);
	int MST_cost = 0;

	while(!pq.empty()){
		pair<int, int> u = pq.top();
		pq.pop();

		if(!visited[u.second]){
			MST_cost += (u.first * -1);
			process(u.second, pq);
		}
	}
}

int main() {

	return 0;
}
